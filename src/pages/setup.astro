---
import Layout from "@/layouts/Layout.astro";
import Button from "@/components/ui/button.astro";
import Label from "@/components/ui/label.astro";
import Input from "@/components/ui/input.astro";
import { actions } from "astro:actions";

// Get action result
const result = await Astro.getActionResult(actions.auth.Setup);

if (result && !result.error) {
    return Astro.redirect("/login");
}
---

<Layout title="Setup Email Manager">
    <main class="min-h-screen grid place-items-center p-4 bg-background">
        <div class="w-full max-w-md space-y-6">
            <div class="space-y-2 text-center">
                <h1 class="text-3xl font-bold tracking-tight text-foreground">
                    Initial Setup
                </h1>
            </div>

            <div class="p-6 bg-card shadow-lg rounded-lg">
                <form
                    method="POST"
                    action={actions.auth.Setup}
                    class="space-y-4"
                >
                    <div class="space-y-2">
                        <Label for="password">Admin Password</Label>
                        <div class="relative">
                            <Input
                                type="password"
                                name="password"
                                id="password"
                                required
                                minlength={8}
                                placeholder="Minimum 8 characters"
                                class="w-full"
                                error={!!result?.error}
                            />
                            <Button
                                type="button"
                                size="icon"
                                variant="ghost"
                                class="absolute right-3 top-1/2 -translate-y-1/2"
                                onclick={`const input = document.getElementById('password'); const type = input.type === 'password' ? 'text' : 'password'; input.type = type; input.nextElementSibling.textContent = type === 'password' ? 'üëÅÔ∏è' : 'üîí';`}
                            >
                                üëÅÔ∏è
                            </Button>
                        </div>
                        {
                            result?.error && (
                                <p class="text-destructive text-sm">
                                    {result.error.message}
                                </p>
                            )
                        }
                    </div>

                    <Button type="submit" class="w-full">
                        Initialize System
                    </Button>
                </form>
            </div>
        </div>
    </main>
</Layout>
